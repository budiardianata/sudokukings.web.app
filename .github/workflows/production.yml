name: Deploy for Production 🚀

on:
  push:
    branches:
      - main

jobs:
  build-deploy:
    name: Build 🏗 and Deploy 🚀
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 🛎
        uses: actions/checkout@v3
        with:
          ref: main
          lfs: true

      - name: Setup node env 🏗
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          check-latest: true

      - name: Get yarn cache directory path 🛠
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache node_modules 📦
        uses: actions/cache@v3
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies 👨🏻‍💻
        run: yarn install --frozen-lockfile

      - name: Run deploy 🚀
        run: yarn generate
        env:
          BASE_URL: ${{ secrets.BASE_URL }}
          FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
          FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
          FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
          FIREBASE_MEASUREMENT_ID: ${{ secrets.FIREBASE_MEASUREMENT_ID }}
          FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
          FIREBASE_RECAPTCHA_KEY: ${{ secrets.FIREBASE_RECAPTCHA_KEY }}

      - name: Deploy to firebase Hosting 🚀
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_SUDOKUKINGS }}'
          channelId: live
          projectId: '${{ secrets.FIREBASE_PROJECT_ID }}'

      - name: Upload static site Artefact 📦
        uses: actions/upload-artifact@v3
        with:
          retention-days: 5
          name: static-site
          path: dist/

  release:
    name: Release on Github 🎉
    runs-on: ubuntu-latest
    needs: build-deploy
    steps:
      - name: Download static site Artefact 📦
        uses: actions/download-artifact@v3
        with:
          name: static-site

      - name: Bump version and push tag 📦
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Archive static site Artefact 📦
        uses: thedoctor0/zip-release@main
        with:
          type: zip
          filename: site-release.zip

      - name: Create github release 🎉
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}
          artifacts: site-release.zip
          token: ${{ secrets.GITHUB_TOKEN }}
